trigger:
- main
- feature/*
- features/*

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Staging
  displayName: StagingA1AUTWorkflowBuild
  jobs:
  - job: BuildAndCreateArtifact
    variables:
    - group: CS_A1AUT_Travel_UIWorkflow_Staging
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
      
    - task: Bash@3
      inputs:
        targetType: 'inline'
        workingDirectory: "."
        script: |
          yarn install --production=false
          yarn run build:austria
      env:
        LOCAL: $(LOCAL)
        PRINT_TRANSLATIONS: $(PRINT_TRANSLATIONS)
        ACCESS_TOKEN_USERNAME_AUT: $(ACCESS_TOKEN_USERNAME_AUT)
        ACCESS_TOKEN_PASSWORD_AUT: $(ACCESS_TOKEN_PASSWORD_AUT)
        SUBSCRIPTION_KEY_AUT: $(SUBSCRIPTION_KEY_AUT)
        BASIC_AUTH: $(BASIC_AUTH)
        CLIENT_ID: $(CLIENT_ID)
        CLIENT_SECRET: $(CLIENT_SECRET)
        API_URL: $(API_URL)
        BASE_URL: $(BASE_URL)
        ASMP_URL: $(ASMP_URL)
      displayName: 'yarn run'
        
    - task: CopyFiles@2
      inputs:
        SourceFolder: './staticwebapp-config/austria'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/test'
        cleanTargetFolder: false

    - task: CopyFiles@2
      inputs:
        SourceFolder: './dist-austria/'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/test'
        cleanTargetFolder: false

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/test'
        ArtifactName: 'staging-dist-austria'
        publishLocation: 'Container'

- stage: Production
  #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main')) 
  displayName: ProductionA1AUTWorkflowBuild
  jobs:
  - job: BuildAndCreateArtifact
    variables:
    - group: CS_A1AUT_Travel_UIWorkflow_Production
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
      
    - task: Bash@3
      inputs:
        targetType: 'inline'
        workingDirectory: "."
        script: |
          yarn install
          yarn run build:austria
      env:
        LOCAL: $(LOCAL)
        PRINT_TRANSLATIONS: $(PRINT_TRANSLATIONS)
        ACCESS_TOKEN_USERNAME_AUT: $(ACCESS_TOKEN_USERNAME_AUT)
        ACCESS_TOKEN_PASSWORD_AUT: $(ACCESS_TOKEN_PASSWORD_AUT)
        SUBSCRIPTION_KEY_AUT: $(SUBSCRIPTION_KEY_AUT)
        BASIC_AUTH: $(BASIC_AUTH)
        CLIENT_ID: $(CLIENT_ID)
        CLIENT_SECRET: $(CLIENT_SECRET)
        API_URL: $(API_URL)
        BASE_URL: $(BASE_URL)
        ASMP_URL: $(ASMP_URL)
      displayName: 'yarn run' 

    - task: CopyFiles@2
      inputs:
        SourceFolder: './staticwebapp-config/austria'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/prod'
        cleanTargetFolder: false

    - task: CopyFiles@2
      inputs:
        SourceFolder: './dist-austria/'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/prod'
        cleanTargetFolder: false

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/prod'
        ArtifactName: 'production-dist-austria'
        publishLocation: 'Container'
